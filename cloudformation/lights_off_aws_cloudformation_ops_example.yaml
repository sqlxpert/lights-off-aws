---
AWSTemplateFormatVersion: "2010-09-09"

Description: |-
  Demonstrates making your own CloudFormation template compatible with

  github.com/sqlxpert/lights-off-aws/  GPLv3  Copyright Paul Marcelin

Parameters:

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: >-
      Identifier of the Virtual Private Cloud in which sample security groups
      will be created

  ############################################################################
  # Add this parameter:
  Enable:  # Do not change logical name!
    Type: String  # Will be coerced; no Boolean parameter type available
    Description: >-
      Whether to create expensive resources. Lights Off will automatically
      update the stack, causing the resources to be created or deleted based
      on the schedules in the stack's "sched-set-Enable-true" and
      "sched-set-Enable-false" tags. See
      https://github.com/sqlxpert/lights-off-aws
    AllowedValues:
      - "false"
      - "true"
    Default: "false"  # Start without expensive resources
  ############################################################################

Conditions:

  ############################################################################
  # Add this condition:
  EnableTrue:
    !Equals [!Ref Enable, "true"]
  ############################################################################

Resources:

  ############################################################################
  # Separately, you must define a service role that allows CloudFormation to
  # create, update and delete ALL of the resources in your template, and you
  # MUST select that role when you create a stack from your template.
  # Otherwise, Lights Off will not be able to update your stack. Test the role
  # by performing a stack update. See
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-servicerole.html
  #
  # Before creating a stack from this sample template, create an IAM role.
  # Leave the Trusted entity type set to AWS service. At the bottom, under
  # Use cases for other AWS services, select CloudFormation. Select the
  # CloudFormation radio button. On the next page, add the
  # AmazonEC2FullAccess policy (not least-privilege, for testing only).
  #
  # Least-privilege example: DeploymentRole in lights_off_aws_prereq.yaml
  # supports creation of a stack from lights_off_aws.yaml
  ############################################################################

  ConditionalSecGrp:
    Type: AWS::EC2::SecurityGroup
    ##########################################################################
    # Use Condition attribute to conditionally create an expensive resource
    Condition: EnableTrue
    ##########################################################################
    Properties:
      GroupDescription:
        Fn::Sub: >-
          Demonstrates creation/deletion based on schedules in the
          sched-set-Enable-true/-false tags of the ${AWS::StackName}
          CloudFormation stack. See
          https://github.com/sqlxpert/lights-off-aws
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ConditionalSecGrp"
      VpcId: !Ref VpcId

  SecGrpWithConditionalRule:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription:
        Fn::Sub: >-
          Demonstrates a rule created/deleted based on schedules in the
          sched-set-Enable-true/-false tags of the ${AWS::StackName}
          CloudFormation stack. See
          https://github.com/sqlxpert/lights-off-aws
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-SecGrpWithConditionalRule"
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - Description: Permanent rule
          IpProtocol: tcp
          FromPort: 53
          ToPort: 53
          CidrIp: 8.8.8.8/32
        ######################################################################
        # Use Fn::If to conditionally add a resource property, list item, etc.
        - Fn::If:
            - EnableTrue
            - Description: Permanent rule
              IpProtocol: tcp
              FromPort: 53
              ToPort: 53
              SourceSecurityGroupId: !Ref ConditionalSecGrp
            - !Ref AWS::NoValue
        ######################################################################
