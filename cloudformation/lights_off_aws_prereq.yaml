---
AWSTemplateFormatVersion: "2010-09-09"

Description: |-
  CloudFormation service role to deploy

  github.com/sqlxpert/lights-off-aws/  GPLv3  Copyright Paul Marcelin

Parameters:

  PlaceholderHelp:
    Type: String
    Default: "https://github.com/sqlxpert/lights-off-aws#least-privilege-installation"

  PlaceholderSuggestedStackName:
    Type: String
    Default: "LightsOffPrereq"

  StackNameLike:
    Type: String
    Description: >-
      When a stack is created using the deployment role, its name must match
      this StringLike/ArnLike pattern. Examples: "LightsOff" only allows a
      stack of that name; "LightsOff*" also allows stacks with names such as
      "LightsOff2" and "CVpnTest"; and "StackSet-LightsOff-*" allows a
      StackSet named "LightsOff", whose StackSet instances receive names
      beginning "LightsOff-CVpn-". See
      https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition_operators.html
    Default: "LightsOff*"

Metadata:

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: For Reference
        Parameters:
          - PlaceholderHelp
          - PlaceholderSuggestedStackName
      - Label:
          default: Advanced Options
        Parameters:
          - PlaceholderAdvancedParameters
      - Label:
          default: For stacks created with the deployment role...
        Parameters:
          - StackNameLike
    ParameterLabels:
      PlaceholderHelp:
        default: For help with this stack, see
      PlaceholderSuggestedStackName:
        default: Suggested stack name
      PlaceholderAdvancedParameters:
        default: Do not change parameters below, unless necessary!
      StackNameLike:
        default: Allowed stack name pattern

Resources:

  DeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      Description: >-
        Resources in Lights Off CloudFormation stack: create, update, delete
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: { Service: cloudformation.amazonaws.com }
            Action: sts:AssumeRole
      # In-line policies apply only to this role, which, in turn, can only be
      # assumed by CloudFormation. Separate, "managed" policies could be
      # attached to other roles or users, allowing permission escalation.
      # Administrator should restrict iam:PassRole to prevent use of this role
      # with arbitrary CloudFormation stacks.
      Policies:
        - PolicyName: LightsOffCloudFormationStackDeploy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:

              - Effect: Allow
                Action:
                  - lambda:CreateFunction
                  - lambda:GetFunction
                  - lambda:DeleteFunction
                  - lambda:UpdateFunctionCode
                  - lambda:GetFunctionConfiguration
                  - lambda:UpdateFunctionConfiguration
                  - lambda:AddPermission
                  - lambda:RemovePermission
                  - lambda:PutFunctionConcurrency
                  - lambda:DeleteFunctionConcurrency
                  - lambda:TagResource
                  - lambda:UntagResource
                Resource:
                  - !Sub "arn:${AWS::Partition}:lambda:*:${AWS::AccountId}:function:${StackNameLike}*"
              - Effect: Allow
                Action:
                  - lambda:CreateEventSourceMapping
                  - lambda:GetEventSourceMapping
                  - lambda:UpdateEventSourceMapping
                  - lambda:DeleteEventSourceMapping
                Resource: "*"
                Condition:
                  ArnLikeIfExists:
                    "lambda:FunctionArn":
                      - !Sub "arn:${AWS::Partition}:lambda:*:${AWS::AccountId}:function:${StackNameLike}*"
              - Effect: Allow
                Action:
                  - lambda:TagResource
                  - lambda:UntagResource
                Resource:
                  - !Sub "arn:${AWS::Partition}:lambda:*:${AWS::AccountId}:event-source-mapping:*"
              - Effect: Allow
                Action:
                  - lambda:ListTags
                Resource: "*"

              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:DeleteLogGroup
                  - logs:PutRetentionPolicy
                  - logs:DeleteRetentionPolicy
                  - logs:AssociateKmsKey
                  - logs:DisassociateKmsKey
                  - logs:TagLogGroup
                  - logs:TagResource
                  - logs:UntagLogGroup
                  - logs:UntagResource
                Resource:
                  - !Sub "arn:${AWS::Partition}:logs:*:${AWS::AccountId}:log-group:${StackNameLike}*"
              - Effect: Allow
                Action:
                  - logs:DescribeLogGroups
                  - logs:ListTagsForResource
                Resource: "*"

              - Effect: Allow
                Action:
                  - events:PutRule
                  - events:DescribeRule
                  - events:EnableRule
                  - events:DisableRule
                  - events:DeleteRule
                  - events:PutTargets
                  - events:ListTargetsByRule
                  - events:RemoveTargets
                  - events:TagResource
                  - events:UntagResource
                Resource:
                  - !Sub "arn:${AWS::Partition}:events:*:${AWS::AccountId}:rule/${StackNameLike}*"
              - Effect: Allow
                Action:
                  - events:ListTagsForResource
                Resource: "*"

              - Effect: Allow
                Action:
                  - sqs:CreateQueue
                  - sqs:SetQueueAttributes
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                  - sqs:ListDeadLetterSourceQueues
                  - sqs:DeleteQueue
                  - sqs:AddPermission
                  - sqs:RemovePermission
                  - sqs:TagQueue
                  - sqs:UntagQueue
                Resource:
                  - !Sub "arn:${AWS::Partition}:sqs:*:${AWS::AccountId}:${StackNameLike}*"
              - Effect: Allow
                Action:
                  - sqs:ListQueues
                  - sqs:ListQueueTags
                Resource: "*"

              - Effect: Allow
                Action: iam:PassRole
                Resource:
                  - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${StackNameLike}*"
              - Effect: Allow
                Action:
                  - iam:CreateRole
                  - iam:UpdateRoleDescription
                  - iam:GetRole
                  - iam:DeleteRole
                  - iam:UpdateAssumeRolePolicy
                  - iam:ListRolePolicies
                  - iam:GetRolePolicy
                  - iam:AttachRolePolicy
                  - iam:DetachRolePolicy
                  - iam:PutRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:ListEntitiesForPolicy
                  - iam:TagRole
                  - iam:UntagRole
                Resource:
                  - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${StackNameLike}*"
              - Effect: Allow
                Action:
                  - iam:ListRoles
                  - iam:ListRoleTags
                  - iam:ListAttachedRolePolicies
                Resource: "*"

              - Effect: Allow
                Action:
                  - kms:ListKeys
                  - kms:ListAliases
                  - kms:ListResourceTags
                  - kms:DescribeKey
                Resource: "*"

  SampleDeploymentRolePassRolePol:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Description:
        Fn::Sub: >-
          ${DeploymentRole}: pass to CloudFormation. Demonstrates a privilege
          that non-adminstrators need before they can create a Lights Off
          CloudFormation stack using the deployment role.
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "iam:PassRole"
            Resource: !GetAtt DeploymentRole.Arn
