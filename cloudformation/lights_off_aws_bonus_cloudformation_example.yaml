---
AWSTemplateFormatVersion: "2010-09-09"

Description: |-
  Demonstrates deleting and recreating AWS resources in your own
  CloudFormation stack, based on cron-style schedules in stack tags.

  github.com/sqlxpert/lights-off-aws/  GPLv3  Copyright Paul Marcelin

Parameters:

  PlaceholderHelp:
    Type: String
    Default: "https://github.com/sqlxpert/lights-off-aws#bonus-deleting-and-recreating-expensive-resources-on-a-schedule"

  PlaceholderSuggestedStackName:
    Type: String
    Default: "LightsOffBonusCloudFormationExample"

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: >-
      Identifier of the Virtual Private Cloud in which the sample security
      groups will be created

  ############################################################################
  # Add this parameter to your template:
  Enable:  # Do not change the parameter name or the capitalization!
    Type: String  # No Boolean parameter type is available
    Description: >-
      Whether to create expensive resources. Lights Off will automatically
      update the stack, causing the resources to be created or deleted based
      on the schedules in the stack's "sched-set-Enable-true" and
      "sched-set-Enable-false" tags. See
      https://github.com/sqlxpert/lights-off-aws
    AllowedValues:
      - "false"
      - "true"
    Default: "false"  # Start without the expensive resources
  ############################################################################

Metadata:  # Optional section, for AWS Console users

  AWS::CloudFormation::Interface:
    ParameterGroups:  # Orders parameters and groups them into sections
      - Label:
          default: For Reference
        Parameters:
          - PlaceholderHelp
          - PlaceholderSuggestedStackName
      - Label:
          default: Essential
        Parameters:
          - Enable
          - VpcId
    ParameterLabels:  # Determines parameter labels
      PlaceholderHelp:
        default: For help with this stack, see
      PlaceholderSuggestedStackName:
        default: Suggested stack name
      Enable:
        default: Enabled?
      VpcId:
        default: VPC

Conditions:

  ############################################################################
  # Add this condition:
  EnableTrue:
    !Equals [!Ref Enable, "true"]
  ############################################################################

Resources:

  ############################################################################
  # Separately, you must define a service role that allows CloudFormation to
  # create, tag, update, untag, and delete ALL of the resources in your
  # template, and you MUST select that role when you create a stack from your
  # template. Otherwise, Lights Off will not be able to update your stack.
  # Test your deployment role by performing a stack update. See
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-servicerole.html
  #
  # Before creating a stack from this sample template, create an IAM role.
  # Leave the Trusted entity type set to AWS service. At the bottom, under
  # Use cases for other AWS services, select CloudFormation. Select the
  # CloudFormation radio button. On the next page, add the
  # AmazonEC2FullAccess policy (not least-privilege, for testing only).
  #
  # Least-privilege example: DeploymentRole in lights_off_aws_prereq.yaml
  # supports creation of a stack from lights_off_aws.yaml
  #
  # Permission to create, modify, and delete arbitrary tags for stack
  # resources is necessary because CloudFormation automatically propagates
  # stack-level tags (including the sched-set-Enable-true and -false tags that
  # you will add) to resources that it creates. If your deployment role does
  # not allow tagging, stack updates will fail. Because CloudFormation is
  # regularly updated to propagate stack tags to more resource types, it is
  # best to provide tagging privileges for all of the resource types in your
  # template. In many cases, you can achieve least-privilege with a condition:
  #
  # "StringLike": { "aws:ResourceTag/aws:cloudformation:stack-name": "*KEYWORD*" }
  #
  # where KEYWORD is some word that you will require in the name of all stacks
  # created using your deployment role, and that you will not allow in the
  # names of any other stacks.
  ############################################################################

  ConditionalSecGrp:
    Type: AWS::EC2::SecurityGroup
    ##########################################################################
    # Conditionally creates an entire resource
    Condition: EnableTrue
    ##########################################################################
    Properties:
      GroupDescription:
        Fn::Sub: >-
          Demonstrates deletion and recreation of a resource (this security
          group) based on schedules in the
          sched-set-Enable-true/-false stack tags of ${AWS::StackName}
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ConditionalSecGrp"
      VpcId: !Ref VpcId

  SecGrpWithConditionalRule:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription:
        Fn::Sub: >-
          Demonstrates deletion and recreation of a resource property (a
          security group ingress rule) based on schedules in the
          sched-set-Enable-true/-false stack tags of ${AWS::StackName}
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-SecGrpWithConditionalRule"
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - Description: Permanent rule
          IpProtocol: tcp
          FromPort: 53
          ToPort: 53
          CidrIp: 8.8.8.8/32
        ######################################################################
        # Fn::If: [ EnableTrue, PROPERTY_IF_ENABLED, PROPERTY_IF_NOT_ENABLED ]
        # conditionally sets or adds a resource property, or conditionally
        # adds or removes a list item. If a resource property key is to be
        # omitted when Enable is false, specify
        # !Ref AWS::NoValue (a pseudo-parameter) for PROPERTY_IF_DISABLED.
        - Fn::If:
            - EnableTrue
            - Description: Conditional rule
              IpProtocol: tcp
              FromPort: 53
              ToPort: 53
              SourceSecurityGroupId: !Ref ConditionalSecGrp
            - !Ref AWS::NoValue
        ######################################################################
